<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd">
    <metadata>
        <id>Forms9Patch</id>
        <version>2.2.6</version>
        <title>Forms9Patch</title>
        <authors>Ben Askren</authors>
        <owners>baskren</owners>
        <requireLicenseAcceptance>true</requireLicenseAcceptance>
        <license type="file">license\LICENSE</license>
        <projectUrl>https://github.com/baskren/Forms9Patch</projectUrl>
        <iconUrl>http://buildcalc.com/forms9patch/Icons/favicon-128.png</iconUrl>
	<description>
Xamarin Forms is great for developing apps on Android, iOS, and Universal Windows Platform (UWP) but it is missing some important features: 
- Scalable images
- NetStandard, PCL and Shared Library, multi-screen / multi-resolution image management
- HTML formatted text for labels and buttons
- NetStandard, PCL and Shared Library custom font management
- Hardware keyboard key detection
- On-Screen software keyboard height change events
- Support for multiple items of the same MIME type on the clipboard
- Support for inter-app Data Sharing

Android developers can use NinePatch bitmaps, the drawable directory naming convention, Html.FromHtml, and a bunch of complex file manipulations to address the image issue.  Likewise, iOS developers can use ResizeableImageWithCapInsets, the @2x, @3x, @4x file naming convention, and some 3rd party libraries for this purpose.  Forms9Patch enhances Xamarin Forms to make multi-resolution / multi-screen image management, custom fonts, and HTML text formatting easy for NetStandard, PCL, and Shared Libary apps for iOS,  Android and UWP
  </description>
  <summary>Simplify multi-device image, label and font management in your NetStandard, PCL, and Shared Library Xamarin.Forms mobile and UWP apps</summary>
	<releaseNotes>
    2.2.6.0: Fixed: Printing HTML text not working in iOS;  Guides not up to date WRT using WebViewPrintEffect;
    2.2.5.0: New: Added EntryNoUnderlineEffect (to remove those pesky Android underlines);  Fixed: Multiple memory leaks; Changing Target property of Popup doesn't update target if it is currently visible; Android crash when Pinching or Rotating; SinglePicker can crash when BasePicker.Index has changed to -1; iOS label renderer is elipsizing the last character in very long, multiline, lines=0 strings; Crash when print job fails on UWP; WebView printing, pdf export, and pnd export not working on iOS; Edge case crashes for UWP printing;
    2.2.4.0: Fixed: Inconsistancies in gesture values, resulting in buttons being triggered when pointer has been moved outside of button's bounds; Swiping ListView cell w/o menu can cause scrolling to be disabled;
    2.2.3.0: Fixed: Android.FontManagement.get_FontFiles can call disposed Directory object;
    2.2.2.0: Renamed WebViewExtensions to PrintService;
    2.2.1.0: New: htmlString.ToPdf() and webView.ToPdf() extension methods for iOS and Android; htmlString.Print() extension method. Fixed: Label.LineHeight not working in UWP; Button is not visually responsive enough;
    2.2.0.0: Built for use with XF 4.4;  Fixed: ToPng functions not always providing optimal results; Android WebViewPrintService not working; UWP WebViewPrintService not yet implemented;
    2.1.3.0: Fixed: Button.Command not fired when GroupToggle = None.
    2.1.2.0: Fixed: Targeted Menu cell size too small (Android); Bold and italics tags not working on iOS Forms9Patch.Label.HtmlText when using default font;  Crash when presenting TargetedMenu without Target on iOS;
    2.1.1.0: Fixed: Button text is clipped on iOS versions earlier than 11.3;  TargetedMenu in vertical orientation is displayed modally (instead of paginating) if menu is longer than space available; TargetedMenu renders on wrong page and next pagination is broken if last appearance did not end on first page; Back and forward buttons are not aligned and sized correctly when TargetedMenu is in vertical orientation; Button padding is not sufficient; Modal popup doesn't respond dynamically to Padding changes;
    2.1.0.0: New: EmbeddedHtmlViewSource (for using EmbeddedResource files as a source to a WebView).  Fixed: Layouts not sized to fit content smaller than 40px; Crash if F9P service is called before Xamarin.Forms.Application.Current is set; EmbeddedResource fonts are broken on UWP;  Android TargetedMenu is broken; CornerRadius of FlyoutPopup is not initiated correctly; Extra padding intermittantly appears in layouts;
    2.0.2.0: Fixed: Android crash when FormsGestures.Listener is disposed; Android Label not rendered in some edge cases;
    2.0.1.0: New: TargetedMenu.SelectedSegment. Fixed: Quick push+pop of popups can cause crash; Memory leaks in Android; Collision with Rg.Plugins.Popup in iOS apps;
    2.0.0.0: New: Pattern compliant IDisposible elements; Popups Dispose() will cancel popup; ListView will dispose IDisposable cell contents; Popups will dispose IDisposable contents; Image leaks fixed; Embedded fork of Rg.Plugins.Popups with fixes; Can copy Toast content by long press; DiskSpace helper static class;    Fixed: Right click on cell throws exception in UWP; UWP HtmlToPng causes crash; Button doesn't position icon correctly if label is null; Button layout not correct if TextAlignent=end; ContentView.BackgroundImage not being disposed; Bubble popup doesn't appear if target bounds cannot be found; #29 Frame doesn't appear if it has no content; #30 Doesn't work with XAML previewer; #32 iOS now uses WKWebView instead of UIWebView;
    1.8.1.0: Build with Xamarin.Forms v4.2; New: Added PermissionPopup.AffirmedAsync() and IPopup.Parameter; Fixed: Binding for Segment.Command doesn't work; Fixed: Label is blank in weird Android ListView edge case; Added optional recursion detection and breadcrumbs; Reduced memory footprint of EmbeddedResourceExtensions;  Potentially Fixed: Issue#20 (not able to replicate issue but removed offending code);  Fixed: Issue#25 (Android crash when Visual stype property is set);
    1.8.0.5: Fixed: Android version of Label crashes on pre-M versions of Android;
    1.8.0.4: Android Fixes: Children of Forms9Patch layout elements are assigned Parent property twice; 1.8.0.3 solution to Android cell swipe issue doesn't work on hardware; Forms9Patch.ListView group header labels are not updating with correct text when BindingContext is changed; Inserted cells in Forms9Patch.ListView is not rendering content at first rendering; App crashes when compiled with Link SDK;
    1.8.0.3: Android Fixes: BubblePopup Content not positioned correctly after screen orientation change; Labels not rendered correctly upon re-rerendering (extreme edge case); ListViewRenderer and ScrollViewRenderer are intercepting FormsGestures touches causing all but tap gesture to fail; BubblePopup not positioned correctly after orientation change.  Change: Button.Lines default changed to 0.
    1.8.0.2: Fixed: Label causes crash on older versions of iOS when default FontSize is used;
    1.8.0.1: Added Xamarin.Android.Support.Core.Utils dependency to NuSpec; Added XF4.0 Android dependencies to NuSpec;
    1.8.0.0: New: Built for Xamarin.Forms 4; FlyoutPopup can be cancelled with Swipe gesture; TargetedMenu now supports Vertical Orientation; Buttons, by default, have IsLongPressEnabled=false (for faster response); Added IconFontFamily to TargetedMenu;  Fixed: Intermittant failure to render labels when in ListView; HardwareKeyPage not working in Xamarin.Forms.Shell; Empty Label.Text causes crash; Not all FormsGestures working on all Xamarin.Forms elements; Rendering of ListView becomes slower and slower when cell content is changed; Label is truncated in some edge cases (Android); ModalPopup does not respond to WidthRequest or HeightRequest; ListView crash because Xamarin.Forms.ScrollView is disposed pre-maturely (thanks Xamarin!); SegmentedControl returning IsTruncated when it isn't; First display of picker may have scroll position in wrong place; Crash because LabelRenderer.Control or LabelRenderer.Element is null; Crash when trying to get the location of a view that has not yet been rendered; Crash when FormsGestures is called on a disposed Android view; Crash when trying to use a custom font that doesn't have ".Resources" in its EmbeddedResourceId; BubblePopup appearing as ModalPopup on UWP when window is small or not near top left of screen; UWP back button only clears top most popup; UWP, SegmentedControl has shadow not showing state correctly; TargetedMenu rendering is too slow;
    1.7.0.0: New: FlyoutPopup makes it easy to create flyout views that dock on the left, right, top or bottom sides of the screen.
    1.6.7.3: Fixed: ModalPopup not centered set to LayoutOption.Fill; Updates: replaced iOS deprecated methods layoutManager.LineFragmentRectForGlyphAtIndex and layou;tManager.CharacterIndexForPoint; Xamarin.Android.Arch.Core packages from 1.0.3.1 to 1.1.1.1;
    1.6.7.2: Doh! Forgot to merge enhancement meant for 1.6.7.1;
    1.6.7.1: Fixed: Intermittant failure of UWP Label to update when Text or HtmlText changes; Crash when SegmentControl.Segments.Clear() is called on empty Segments collection; Forms9Patch.Image does not update BindingContext of active ImageSource; Enhanced: HtmlText now accepts [ ' ] character as quotation mark for tag attributes;
    1.6.7: Fixed: Label Autofit in Android fails if the system font size has been changed (via device's settings);  SegmentedControl randomly has spaces between segments; Segmented labels in UWP may slowly shrink to MinFontSize when SyncSegmentFontSizes is enabled;
    1.6.6.2: Fixed: Label on Android upsizing the font beyond FontSize causing text to be truncated or not appear; Up gestures are not being triggered on Android (not a FormsGestures issue) causing button taps not to fire; New: Added async Task&lt;PopupPoppedEventArgs&gt; DelayUntilPoppedAsync() to allow inline wait until popup has been popped; Refactored: CancelAsync and PopAsync to accept a "trigger" that is the cause of the action; Added Console.WriteLines to better message when an ImageResource is not found;
    1.6.6.1: Fixed: SVG image files without viewBox attribute fail to render; Updated Package Requirements: Xamarin.Forms 4.0.0.425677, Newtonsoft.Json 12.0.0.0
    1.6.6.0: New: Added PopAfter property (and Create argument) to Popups to indicate the TimeSpan at which a Popup will disappear after appearing; Added BorderColor, BorderWidth, and BorderRadius properties (redundant with OutlineColor, OutlineWidth, and OutlineRadius properties) to make it easier to switch between Forms9Patch and Xamarin.Forms elements.
    1.6.5.1: Removed: IsLongPressEnabled from buttons (a very stupid idea on my part).  If you want faster buttons, set FormsGestures.Droid.Settings.TapThreshold.
    1.6.5.0: Fixed: ListView items are deleted when they are hidden; &lt;br/&gt; tag is intermittantly ignored; Pickers not scrolling to SelectedItem when appearing; Enhancements: Default ListView cell will parse HTML; Added IconFontFamily to buttons (for IconText); Added IsLongPressEnabled to buttons (to allow faster click response as default behavior);  Changes: Update to Xamarin.Forms 3.3.0.967583; Update to Rg.Plugins.Popup v1.1.5.188; Popup's IsAnimationEnabled property is set to false to mitigate Rg.Plugins.Popup issue #122;
    1.6.4.0: Fixed: SegmentedControl not correctly reporting IsClipped; P42.Utils.TextCache is corrupted if writing when app crashes;
    1.6.3.0: New: Added IsHeadlessTest property to P42.Utils.Enviroment to address uncertainty of MainThreadId property in headless tests; Fixed:  Android: Label with &lt;a&gt; tag in cell won't click through to cell when clicked in non &lt;a&gt; tag text; Null exception in Forms9Patch.UWP.HardwareKeyListenerEffect.cs; Android and UWP, failure to re-render label with AutoFit!=None when Parent container is unhidden;
    1.6.2.1: Fixed: UWP throws "System.IO.FileLoadException: ... SharpDX.Direct2D1, Version=4.2.0" because SharpDX.Direct2D1 NuGet upgraded in Forms9Patch.UWP build but not in the Forms9Patch.nuspec.
    1.6.2: Enhanced: Make P42.Utils.Environment.MainThreadId settable; Fixed: UWP: P42.Utils.DownloadCache not working;  Android: Pickers are blank; Forms9Patch.ListView not responding to ScrollTo in some edge cases; Forms9Patch.Label not rendering correctly when Lines=0;
    1.6.1.1: Fixed: Label.AutoFit=Lines not sizing correctly when unconstrained; 
    1.6.1: Fixed: Android: Nulled out item in MimeItemCollection causes crash when accessed; Android: HtmlToPng causes crash; Removing multiple popups in series causes removal animation to fail; 3 digit hex colors are not interpreted correctly in HtmlLabel; Android: crash from NativeGestureListener failure; Magnifying glass (iOS) not showing contents of popups; BubblePopup not rendering full size in some orientations.
    1.6.0: Fixed: Unable to create Forms9Patch.Grid in XAML; BubblePopup not responding to PointerLength; Image HeightRequest/WidthRequest too easily overpowered by other members of StackLayout.  Enhancements: Popups now respond to LayoutAlignents; Popups respond to size and position changes in Target; Forms9Patch.Image with SVG ImageSource now responds to Opacity and TintColor; AcivityIndicatorPopup now responds to Scale property.
    1.5.0.9: Reverted to SkiaSharp 1.59.3 to reduce likelihood of crashes related to rendering shadows with SkiaSharp 1.60 (https://github.com/mono/SkiaSharp/issues/569); Added Forms9Patch.Analytics delegates to all Forms9Patch users to keep tabs on if this was effective;
    1.5.0.8: Fixed: Animation of popups not smooth; Fixed: Too much effort to assure actions are on the UI Thread;
    1.5.0: Refactored layout engine to SkiaSharp.Views.Forms to eliminate device specific issues; Refactored popups to use Rg.Plugins.Popup to eliminate the need for RootPage and addresse failure to render popups in modal pages in iOS; Fixed issues with Label vertical alignment in iOS; Fixed: (Android) failure to detect gestures when element is embedded inside of another element that is monitoring gestures;
    1.4.1: Fixed: Clipboard, DataSharing and HardwareKeyListener UWP dependencies not registered.
    1.4.0: New: Clipboard supports multiple objects of same Mime type, Inter-app Data Sharing; Fixed: HardwareKeyboardListener crashes in some UWP implementations, Popups crashes in Android implementations when instantiated before Forms9Patch.RootPage is instantiated;  Eliminated need for Android "forms9patch_copy_paste_authority" string.
    1.3.3: Fixed: targeted popups (Bubble, TargetedToast, TargetedMenu) will, after the device orientation has changed, render in wrong location when pointing at an element inside of a ScrollView.
    1.3.2: New: KeyboardService.Height and KeyboardService.HeightChanged allow you to resize your layout views in response to changes in the software keyboard.
    1.5.1: Fixed: Xamarin.Forms 3.0 UWP: Popups, Buttons, and Layouts are rendering blank.
    1.3.0.0: New: Forms9Patch is open source!  Get it at https://1drv.ms/u/s!AkPAsLOJX3DChFJLwyOMwJgpVXfQ  Fixed: failure to build because of orphaned references to SkiaSharp.Extended.Svg;
    1.2.1.0: Fixed: Clipboard entry reading fails on iOS; Work around for SkiaSharp 1.60 Lattice bug;
    1.2.0.0: Fixed: Android crash if using custom font and app cache is cleared.  New: Clipboard and HardwareKey classes (documentation is coming!).  NOTE: You must add `&lt;string name="forms9patch_copy_paste_authority"&gt;*your_Android_app_package_name_here*.f9pcopypaste&lt;/string&gt;` to your Android project's `Resources/values/strings.xml` file.  See the GitHub Forms9PatchDemo app for an example.
1.1.1.0: Fixed: iOS Label renders at MinFontSize when Lines=0 and AutoFit=None; Android Label truncates last character when Lines=0 and AutoFit=Width; SinglePicker View working on UWP desktop.  Faster SegmentedControl rendering.  Improved Android reliability.
1.1.0.0: New: SVGs are now valid image sources!  Fixed: Shape outlines are not always full thickness; Button.Clicked event requires double click to fire on Andriod.
1.0.1.3: Fix: Android renderers use Android SDK calls not supported by Gingerbread; PCL.Utils.ApplicationStorageExtensions not using correct directory; 
1.0.1.2: Fix: Instantiation of popup, before App.MainPage set to Forms9Patch.RootPage, causes crash; iOS button text not always appearing; Fixed: Default padding not zero for Forms9Patch layouts (other than Frame); Changed: Forms9Patch.Frame is not longer obsolete; IPopup is public; 
1.0.1.1: Fix: Crash on older versions of Windows; Change: IPopup is public;
1.0.0.0: Full UWP Support;
0.10.3.10: UWP Release;
0.10.3.5: Fixed: Android implementation of FormsGestures failing in Xamarin.Forms 2.4; Android implementation of popups not re-rendering correctly upon 3rd or 4th display;  Added: pre-alpha of the UWP implmentation of the following Forms9Patch elements: Image, ImageSource, AbsoluteLayout, ContentView, Frame, Grid, ManualLayout, RelativeLayout, StackLayout, ImageButton, MaterialButton, MaterialSegmentedControl, Segment, RootPage, ActivityIndicatorPopup, ModalPopup, PermissionPopup, Toast;  
0.10.3.4: Fixed: Size of last segment of MaterialSegmentedController does not always match other segments; iOS intermittantcrash when Image is disposed;
0.10.3.3: Fixed: IconImage dissappears after pressing Android rendering of ImageButton; Some MultiResourceImages are not fitted properly on Android;
0.10.3.2: Fixed: ImageButton does not return to default state after selected; ImageButton triggers Tapped event twice;
0.10.3.1: Fixed: ImageButton crashes when ImageButtonState properties (DefaultState, PressedState, etc) are not set.
0.10.3.0: ImageButton, MaterialButton and MaterialSegmentedControl has been enhanced with HorizontalTextAlignment and VerticalTextAlignment properties.  MaterialSegmentedControl also has IntraSegmentSpacing and IntraSegmentOrientation properties; Obsolete: ImageButton, MaterialButton and MaterialSegmentedControl Alignment property; Fix: Potential crash when deconstructing Image elements. 
0.10.2.16: Fixed: iOS rendering of images and fonts in XAML Previewers; Presentation of popups with modal pages.
0.10.2.13: Fixed multiple edge case rendering issues with Label. 
0.10.2.12: Changed: PCL Profile from 259 to 111.  Fixed: ImageSource does not open Embedded Resource image when used in a library.
0.10.2.11: Fixed: (Android) Back button causes app to exit.
0.10.2.10: Fixed: Android Label not rendering in Xamarin.Studio's XAML Previewer;
0.10.2.9: Fixed: Fit=LabelFit.Lines not working when truncating on iOS; Modified: Buttons now default to Fit=LabelFit.Width and Padding=4;
0.10.2.8: Added the SelectedBackgroundColor and SelectedFontColor properties to MaterialButton and MaterialSegmentedControl
0.10.2.7: Fixed: Failure to dynamically resize Label when text changes.
0.10.2.6: Fixed: ImageButton not returned to full opacity when IsEnabled is programically set to true;
0.10.2.5: Fixed: bound values of ImageButtonState properties are not used on initialization.
0.10.2.4: Added: TintImage property to MaterialButton and MaterialSegmentedController to control if ImageSource image is tinted with FontColor;
0.10.2.3: Fixed: Unable to select portion of Xamarin.Forms.ListView cell that is covered by Forms9Patch.Label; Android Forms9Patch.Label not always updating correctly when BindingContext has changed; Added: ApplicationInfoService to get application's Name, Bundle/Package Identifier, Build number, and Version name;
0.10.2.2: Fix: ability to listen to gestures on Forms9Patch elements; Fix: RootPage responds correctly to changes in iOS status bar; Added: ColorGradientBox element;
0.10.2.1: Fix: Intermittant crash on Android when releasing layouts.
0.10.2.0: Now fully supports Shared Library apps.  Apparently, it did all along *except* for Embedded Resource fonts.  Now that has been fixed.
0.10.1.0: Added support for &lt;a&gt; tag to HtmlText property of Label; Added HapticsMode and HapticsEffect properties to buttons;
0.10.0.1: Fix: failure to use some Forms9Patch properties in XAML ResourceDictionary
0.10.0.0: Optimized for rendering speed; fix: Bubble popup not appearing with MasterDetailPage; fix: BubblePopup not responding to Margin property; Added Toast, BubbleToast;
0.9.13.5: Fix: Crash from Label object being instantiated and held a period without being rendered.
0.9.13.4: Fix: iOS FormsGestures library Panning event proides erratic results. 
0.9.13.3: Fix: Android Label's Lines property does not truncate when LineBreakMode is not Start, Mid, or Center; Added: ActualFontSize readonly property to Label to give access to fit adjusted font size.
0.9.13.2: New: Added IsElliptical property to MaterialButton and the layout elements; Enabled the Opacity property of Image element.
0.9.13.1: New: Added CancelOnBackgroundTouch Property (default: true) to ModalPopup and BubblePopup
0.9.13.0: New: CustomFontEffect platform effect can be applied to Xamarin.Forms Label, Button, Entry, and Editor elements to allow the EmbeddedResourceID of PCL Embedded Resource fonts as value for FontFamily property.
0.9.12.5: Fixed: ImageButton in ContentView fails to correctly render state changes in BackgroundImage (Android).
0.9.12.4: Fixed: resizing of button labels when text is changed. 
Enhanced: Forms9Patch.ImageSource.FromMultiResource uses first portion of path of Embedded Resource to determine which assembly to search.
Changed: Lines property of Label sets the max number of lines when Fit=LabelFit.None.
0.9.12.2: Fixed: (1) crash when render Label in Horizontal Orientation in StackLayout; (2) Failure to render Label in some layouts; (3) Failure to autofit some one-character labels correctly; (4) Failure to resize label when bounds changes; Enhanced: Can refer to iOS system fonts by using their name as value for FontFamily property.
0.9.12.2: Fixed: (1) crash when instantiating buttons on iOS release builds; (2) iOS HtmlText &lt;tt&gt; tag combined with &lt;b&gt;, &lt;u&gt;, or &lt;i&gt; fails to render font correctly; (3) Image button touch intermittantly fails.
Enhanced: Width and Height values of LabelFit are now supported for labels with unimposed Height.
0.9.12.1: Fixed: (1) failure to get bold and/or italic version of some iOS system fonts; (2) Multi-line labels not appearing so on iOS; (3) 9Patch images market to edge failing to render on iOS;
0.9.12.0: New: Width and Lines Autofit for Labels.  TrailingImage property for ImageButton, MaterialButton and MaterialSegmentedController. Forms9Patch.FontExtensions.LoadedFontFamilies() lists all currently loaded fonts.
Fixed: iOS HtmlMarkup underlines don't match font color, Default Android image button label missing for some states.  Unable to bind to Segment.  Able to unselect Segment when in Radio mode.
0.9.11.2: Fixed: in iOS, Images will have height or width of 1 (instead defaulting to source image height or width) when HeightRequest or WidthRequest is not set. 
0.9.11.1: Fixed: Issue where Forms9Patch.iOS.Settings.LicenseKey throws System.NullRefernceException. 
0.9.11.0: Added HTML markup to Label, MaterialButton, Segment, and ImageButtonState elements.
0.9.10.7: Built for Xamain Forms 2.2
0.9.10.6: Fixed crash when no Target is given for BubblePopup.  Fixed failure to present popups when used w/ PushModalAsync().
0.9.10.4: Added Cancel method to Popups; Auto-cancel Popups when Android [back] button is pressed.
0.9.10.3: Improved reliabilty of rendering of 9patch backgrounds when used in ListView in Android.
0.9.10.2: Fixed AOT issue that caused BubblePopup not to work on iOS devices.
0.9.10.1: Fixed layout of NinePatch backgrounds when used in a ListView on Android.
0.9.10.0: Added ModalPopup and BubblePopup elements.  See demo app for example.
0.9.9.3: 25x Improved tap response on all buttons; Fixed ImageButton.Background rendering issue.
0.9.9.2: 3x Improved iOS image loading time.  Known issue: ImageButton Fails to present anything but DefaultState.BackgroundImage - will be fixed very soon.
0.9.9.1: Fixed issue with comping for iOS devices.
0.9.9.0: Added:
(1) PressingState to ImageButton to enable customization of the button for when it is in the pressed state.
(2) LongPressing and LongPressed events have been added to the ImageButton, MaterialButton, and Segment element.
(3) SegmentLongPressing and SegmentLongPressed events have been added to the MaterialSegmentedControl element.
(4) Renamed ImageButton's Clicked event to Tapped.
0.9.8.2: Fixed not all XAML attributes working for ImageButtonState.
0.9.8.1: Fixed:  XAML Segments Attribute for MaterialSegmentButton; Added FontColor and FontAttributes properties to Segment
0.9.8.0+ Added MaterialSegmentControl, Added Orientation property to MaterialButton
0.9.7.1 Fixed: MaterialButton render when image but no text present.
0.9.7.0 Added ImageButton and MaterialButton elements, Added HasShadow property to Android and iOS AbsoluteLayout, Frame, Grid, RelativeLayout, and StackLayout layouts.
0.9.6.0 Fixed intermittant iOS UIImage.ImageWithData double free, Added RelativeLayout, Grid, and AbsoluteLayout Elements
0.9.5.2 Fixed ContentView background scalable image rendered as non-scalable image if CapsInset has a one or two -1 values
0.9.5.1 Fixed scaling of ContentView BackgroundImage
0.9.5 1) Added Fill (AspectFill, AspectFit, Fill and Tile) property to Image; 2) Added ContentView and Frame elements with BackgroundView and (for Frame) OutlineWidth and OutlineRadius properties
0.9.4 Bug fix Correct resizing when iOS screen orientation changes
0.9.3 fix race condition during debug where iOS Renderer releases Element before releasing renderer.
0.9.2 Bug fix for not properly scaling when parent space is smaller than base image but larger than base image less complaint portion.
0.9.1 beta release
0.9.1 fix: scaling of scalable images larger than parent space
</releaseNotes>
        <copyright>2019, 42nd Parallel</copyright>
        <language>en-US</language>
        <tags>NinePatch Xamarin Forms SVG Image Segmented button Tooltip Popup Bubble Pointer ImageButton longpress HTML text markup Label autofit autosize autoscale Data Sharing Multi-item clipboard</tags>
        <dependencies>
            <group targetFramework="NetStandard2.0">
                <dependency id="Xamarin.Forms" version="4.4.0.991640" />
                <dependency id="Xamarin.Essentials" version="1.5.1" />
                <dependency id="Newtonsoft.Json" version="12.0.3" />
                <dependency id="SkiaSharp.Views.Forms" version="1.68.1.1" />
                <dependency id="SkiaSharp.Svg" version="1.60" />
            </group>
            <group targetFramework="Xamarin.iOS10">
                <dependency id="Xamarin.Forms" version="4.4.0.991640" />
                <dependency id="Xamarin.Essentials" version="1.5.1" />
                <dependency id="Newtonsoft.Json" version="12.0.3" />
                <dependency id="SkiaSharp.Views.Forms" version="1.68.1.1" />
                <dependency id="SkiaSharp.Svg" version="1.60" />
            </group>
            <group targetFramework="UAP10.0">
                <dependency id="Xamarin.Forms" version="4.4.0.991640" />
                <dependency id="Xamarin.Essentials" version="1.5.1" />
                <dependency id="Newtonsoft.Json" version="12.0.3" />
                <dependency id="SkiaSharp.Views.Forms" version="1.68.1.1" />
                <dependency id="SkiaSharp.Svg" version="1.60.0" />
                <dependency id="SharpDX.Direct2D1" version="4.2.0" />
                <dependency id="Microsoft.NETCore.UniversalWindowsPlatform" version="6.2.8" />
                <dependency id="NETStandard.Library" version="2.0.3" />
                <dependency id="Win2D.uwp" version="1.20.0" />
            </group>
            <group targetFramework="MonoAndroid10">
                <dependency id="Xamarin.Forms" version="4.4.0.991640" />
                <dependency id="Xamarin.Essentials" version="1.5.1" />
                <dependency id="Newtonsoft.Json" version="12.0.3" />
                <dependency id="SkiaSharp.Views.Forms" version="1.68.1.1" />
                <dependency id="SkiaSharp.Svg" version="1.60" />
                <dependency id="Xamarin.Android.Support.v4" version="28.0.0.3" />
                <dependency id="Xamarin.Android.Support.Design" version="28.0.0.3" />
                <dependency id="Xamarin.Android.Support.v7.AppCompat" version="28.0.0.3" />
                <dependency id="Xamarin.Android.Support.v7.CardView" version="28.0.0.3" />
                <dependency id="Xamarin.Android.Support.v7.MediaRouter" version="28.0.0.3" />
                <dependency id="Xamarin.Android.Support.CustomTabs" version="28.0.0.3" />
                <dependency id="Xamarin.Android.Support.Core.Utils" version="28.0.0.3" />
            </group>
        </dependencies>
    </metadata>
</package>
